var mapWidgets=mapWidgets||{};if(typeof django!=="undefined"&&django.jQuery){mapWidgets.jQuery=django.jQuery.noConflict()}else{mapWidgets.jQuery=jQuery.noConflict()}var mapWidgets=mapWidgets||{};if(typeof django!=="undefined"&&django.jQuery){mapWidgets.jQuery=django.jQuery.noConflict()}else{mapWidgets.jQuery=jQuery.noConflict()}(function($){var initializing=false,fnTest=/xyz/.test(function(){xyz})?/\bSuper\b/:/.*/;$.Class=function(){};$.Class.extend=function(prop){var Super=this.prototype;initializing=true;var prototype=new this;initializing=false;for(var name in prop){prototype[name]=typeof prop[name]=="function"&&typeof Super[name]=="function"&&fnTest.test(prop[name])?function(name,fn){return function(){var tmp=this.Super;this.Super=Super[name];var ret=fn.apply(this,arguments);this.Super=tmp;return ret}}(name,prop[name]):prop[name]}function Class(){if(!initializing&&this.init){this.init.apply(this,arguments)}}Class.prototype=prototype;Class.constructor=Class;Class.extend=arguments.callee;return Class};if(typeof Function.bind==="undefined"){Function.prototype.bind=function(obj){var method=this;tmp=function(){return method.apply(obj,arguments)};return tmp}}if(!Array.indexOf){Array.prototype.indexOf=function(obj){for(var i=0;i<this.length;i++){if(this[i]==obj){return i}}return-1}}})(mapWidgets.jQuery);(function($){DjangoMapWidgetBase=$.Class.extend({init:function(options){$.extend(this,options);this.coordinatesOverlayToggleBtn.on("click",this.toggleCoordinatesOverlay.bind(this));this.coordinatesOverlayDoneBtn.on("click",this.handleCoordinatesOverlayDoneBtnClick.bind(this));this.coordinatesOverlayInputs.on("change",this.handleCoordinatesInputsChange.bind(this));this.addMarkerBtn.on("click",this.handleAddMarkerBtnClick.bind(this));this.myLocationBtn.on("click",this.handleMyLocationBtnClick.bind(this));this.deleteBtn.on("click",this.resetMap.bind(this));if($(this.wrapElemSelector).closest(".module.collapse").length){$(document).on("show.fieldset",this.initializeMap.bind(this))}var autocomplete=new google.maps.places.Autocomplete(this.addressAutoCompleteInput,this.GooglePlaceAutocompleteOptions);google.maps.event.addListener(autocomplete,"place_changed",this.handleAutoCompletePlaceChange.bind(this,autocomplete));google.maps.event.addDomListener(this.addressAutoCompleteInput,"keydown",this.handleAutoCompleteInputKeyDown.bind(this));this.geocoder=new google.maps.Geocoder;this.initializeMap.bind(this)()},initializeMap:function(){console.warn("Implement initializeMap method.")},updateMap:function(lat,lng){console.warn("Implement updateMap method.")},addMarkerToMap:function(lat,lng){console.warn("Implement this method for your map js library.")},fitBoundMarker:function(){console.warn("Implement this method for your map js library.")},removeMarker:function(){console.warn("Implement this method for your map js library.")},dragMarker:function(e){console.warn("Implement dragMarker method.")},handleMapClick:function(e){console.warn("Implement handleMapClick method.")},handleAddMarkerBtnClick:function(e){console.warn("Implement handleAddMarkerBtnClick method.")},isInt:function(value){return!isNaN(value)&&parseInt(Number(value))===value&&!isNaN(parseInt(value,10))},getLocationValues:function(){var latlng=this.locationInput.val().split(" ");var lat=latlng[2].replace(/[\(\)]/g,"");var lng=latlng[1].replace(/[\(\)]/g,"");return{lat:lat,lng:lng}},callPlaceTriggerHandler:function(lat,lng,place){if(place===undefined){var latlng={lat:parseFloat(lat),lng:parseFloat(lng)};this.geocoder.geocode({location:latlng},function(results,status){if(status===google.maps.GeocoderStatus.OK){var placeObj=results[0]||{};$(this.addressAutoCompleteInput).val(placeObj.formatted_address||"");$(document).trigger(this.placeChangedTriggerNameSpace,[placeObj,lat,lng,this.wrapElemSelector,this.locationInput]);if($.isEmptyObject(this.locationFieldValue)){$(document).trigger(this.markerCreateTriggerNameSpace,[placeObj,lat,lng,this.wrapElemSelector,this.locationInput])}else{$(document).trigger(this.markerChangeTriggerNameSpace,[placeObj,lat,lng,this.wrapElemSelector,this.locationInput])}}}.bind(this))}else{$(document).trigger(this.placeChangedTriggerNameSpace,[place,lat,lng,this.wrapElemSelector,this.locationInput])}},updateLocationInput:function(lat,lng,place){var location_input_val="POINT ("+lng+" "+lat+")";this.locationInput.val(location_input_val);this.updateCoordinatesInputs(lat,lng);this.addMarkerToMap(lat,lng);this.callPlaceTriggerHandler(lat,lng,place);this.locationFieldValue={lng:lng,lat:lat};this.deleteBtn.removeClass("mw-btn-default disabled").addClass("mw-btn-danger")},resetMap:function(){if(!$.isEmptyObject(this.locationFieldValue)){this.hideOverlay();this.locationInput.val("");this.coordinatesOverlayInputs.val("");$(this.addressAutoCompleteInput).val("");this.addMarkerBtn.removeClass("active");this.removeMarker();this.deleteBtn.removeClass("mw-btn-danger").addClass("mw-btn-default disabled");$(document).trigger(this.markerDeleteTriggerNameSpace,[this.locationFieldValue.lat,this.locationFieldValue.lng,this.wrapElemSelector,this.locationInput]);this.locationFieldValue=null}},toggleCoordinatesOverlay:function(){this.coordinatesOverlayToggleBtn.toggleClass("active");$(".mw-coordinates-overlay",this.wrapElemSelector).toggleClass("hide")},updateCoordinatesInputs:function(lat,lng){$(".mw-overlay-latitude",this.wrapElemSelector).val(lat||"");$(".mw-overlay-longitude",this.wrapElemSelector).val(lng||"")},handleCoordinatesInputsChange:function(e){var lat=$(".mw-overlay-latitude",this.wrapElemSelector).val();var lng=$(".mw-overlay-longitude",this.wrapElemSelector).val();if(lat&&lng){this.updateLocationInput(lat,lng);this.fitBoundMarker()}},handleCoordinatesOverlayDoneBtnClick:function(){$(".mw-coordinates-overlay",this.wrapElemSelector).addClass("hide");this.coordinatesOverlayToggleBtn.removeClass("active")},handleMyLocationBtnClick:function(){this.showOverlay();if(navigator.geolocation){navigator.geolocation.getCurrentPosition(this.handleCurrentPosition.bind(this),this.handlecurrentPositionError.bind(this))}else{this.handlecurrentPositionError()}},handleCurrentPosition:function(location){this.updateLocationInput(location.coords.latitude,location.coords.longitude);this.hideOverlay();this.fitBoundMarker()},handlecurrentPositionError:function(){this.hideOverlay();alert("Your location could not be found.")},handleAutoCompleteInputKeyDown:function(e){var keyCode=e.keyCode||e.which;if(keyCode===13){e.preventDefault();return false}},handleAutoCompletePlaceChange:function(autocomplete){var place=autocomplete.getPlace();if(!place.geometry){return}var lat=place.geometry.location.lat();var lng=place.geometry.location.lng();this.updateLocationInput(lat,lng,place);this.fitBoundMarker()},showOverlay:function(){this.loaderOverlayElem.removeClass("hide")},hideOverlay:function(){this.loaderOverlayElem.addClass("hide")}})})(mapWidgets.jQuery);(function($){DjangoMapboxPointFieldWidget=DjangoMapWidgetBase.extend({init:function(options){$.extend(this,options);this.coordinatesOverlayToggleBtn.on("click",this.toggleCoordinatesOverlay.bind(this));this.coordinatesOverlayDoneBtn.on("click",this.handleCoordinatesOverlayDoneBtnClick.bind(this));this.coordinatesOverlayInputs.on("change",this.handleCoordinatesInputsChange.bind(this));this.addMarkerBtn.on("click",this.handleAddMarkerBtnClick.bind(this));this.myLocationBtn.on("click",this.handleMyLocationBtnClick.bind(this));this.deleteBtn.on("click",this.resetMap.bind(this));if($(this.wrapElemSelector).closest(".module.collapse").length){$(document).on("show.fieldset",this.initializeMap.bind(this))}mapboxgl.accessToken=this.mapOptions.access_token;this.mapboxSDK=new mapboxSdk({accessToken:this.mapOptions.access_token});this.mapboxOptions=this.mapOptions.mapOptions||{};this.mapboxOptions.container=this.mapElement.id;this.geocoderOptions=this.mapOptions.geocoderOptions||{};this.geocoderOptions.mapboxgl=mapboxgl;this.geocoderOptions.accessToken=mapboxgl.accessToken;if(!this.geocoderOptions.placeholder){this.geocoderOptions.placeholder=this.geocoderInputPlaceholderText}this.geocoder=new MapboxGeocoder(this.geocoderOptions);if(this.mapboxOptions.center){this.mapboxOptions.center=[this.mapboxOptions.center[1],this.mapboxOptions.center[0]]}this.flyToEnabled=this.geocoderOptions.flyTo||false;this.geocoder.on("result",place=>this.handleAutoCompletePlaceChange(place.result));this.initializeMap.bind(this)()},initializeMap:function(){this.map=new mapboxgl.Map(this.mapboxOptions);document.getElementById(this.geocoderWrapID).appendChild(this.geocoder.onAdd(this.map));if(this.mapOptions.showZoomNavigation){this.map.addControl(new mapboxgl.NavigationControl)}this.addressAutoCompleteInput=$("input:first","#"+this.geocoderWrapID);$(this.mapElement).data("mapboxMapObj",this.map);$(this.mapElement).data("mapboxMapWidgetObj",this);if(!$.isEmptyObject(this.locationFieldValue)){this.updateLocationInput(this.locationFieldValue.lat,this.locationFieldValue.lng);this.fitBoundMarker()}},addMarkerToMap:function(lat,lng){this.removeMarker();this.marker=(new mapboxgl.Marker).setLngLat([parseFloat(lng),parseFloat(lat)]).setDraggable(true).addTo(this.map);this.marker.on("dragend",this.dragMarker.bind(this))},fitBoundMarker:function(){if(this.marker){if(this.flyToEnabled){this.map.flyTo({center:this.marker.getLngLat(),zoom:this.mapOptions.markerFitZoom||14})}else{this.map.jumpTo({center:this.marker.getLngLat(),zoom:this.mapOptions.markerFitZoom||14})}}},removeMarker:function(e){if(this.marker){this.marker.remove()}},dragMarker:function(e){const position=this.marker.getLngLat();this.updateLocationInput(position.lat,position.lng)},handleAddMarkerBtnClick:function(e){$(this.mapElement).toggleClass("click");this.addMarkerBtn.toggleClass("active");if($(this.addMarkerBtn).hasClass("active")){this.map.on("click",this.handleMapClick.bind(this))}else{this.map.off("click",this.handleMapClick.bind(this))}},handleMapClick:function(e){this.map.off("click",this.handleMapClick.bind(this));$(this.mapElement).removeClass("click");this.addMarkerBtn.removeClass("active");this.updateLocationInput(e.lngLat.lat,e.lngLat.lng)},callPlaceTriggerHandler:function(lat,lng,place){if(place===undefined){this.mapboxSDK.geocoding.reverseGeocode({query:[parseFloat(lng),parseFloat(lat)]}).send().then(response=>{const address=response?.body?.features?.[0];this.geocoder.clear();const placeName=address?.place_name||"Unknown Place";this.addressAutoCompleteInput.val(placeName);$(document).trigger(this.placeChangedTriggerNameSpace,[address,lat,lng,this.wrapElemSelector,this.locationInput]);if($.isEmptyObject(this.locationFieldValue)){$(document).trigger(this.markerCreateTriggerNameSpace,[address,lat,lng,this.wrapElemSelector,this.locationInput])}else{$(document).trigger(this.markerChangeTriggerNameSpace,[address,lat,lng,this.wrapElemSelector,this.locationInput])}})}else{$(document).trigger(this.placeChangedTriggerNameSpace,[place,lat,lng,this.wrapElemSelector,this.locationInput])}},handleAutoCompletePlaceChange:function(place){if(!place.geometry){return}var[lng,lat]=place.geometry.coordinates;this.updateLocationInput(lat,lng,place);this.fitBoundMarker()}})})(mapWidgets.jQuery);